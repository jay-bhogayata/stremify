{
  "openapi": "3.0.0",
  "info": {
    "title": "Stremify API",
    "version": "0.0.1",
    "description": "A backend api for video streaming platform.",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    },
    "contact": {
      "name": "jay bhogayata",
      "email": "contact@jaybhogayata.dev"
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionId"
      }
    },
    "schemas": {
      "SignUpRequestBody": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The user's full name.",
            "minLength": 1,
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The user's email address.",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "description": "The user's password.",
            "minLength": 8,
            "example": "password123"
          }
        },
        "example": {
          "name": "John Doe",
          "email": "john.doe@example.com",
          "password": "password123"
        }
      },
      "VerifyUserRequestBody": {
        "type": "object",
        "required": [
          "email",
          "otp"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The user's email address.",
            "example": "john.doe@example.com"
          },
          "otp": {
            "type": "string",
            "description": "The OTP for email verification.",
            "minLength": 6,
            "maxLength": 6,
            "example": "123456"
          }
        }
      },
      "LoginRequestBody": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The user's email address.",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "description": "The user's password.",
            "minLength": 8,
            "example": "password123"
          }
        }
      },
      "SignUpUserRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The user's full name.",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The user's email address.",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "description": "The user's password.",
            "minLength": 8,
            "example": "password123"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the user.",
            "example": 12345
          },
          "name": {
            "type": "string",
            "description": "The user's full name.",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The user's email address.",
            "example": "john.doe@example.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "guest",
              "subscriber",
              "admin"
            ],
            "description": "The user's role.",
            "example": "guest"
          },
          "verified": {
            "type": "boolean",
            "description": "Whether the user is verified.",
            "example": false
          },
          "password": {
            "type": "string",
            "description": "The user's hashed password.",
            "example": "$2b$10$K9x9rW3bOzL8wN2GJH9bH.5omVc1RQWTr5eO/N6b2qS0UL9JpXU8W"
          }
        }
      },
      "ResponseUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the user.",
            "example": 12345
          },
          "name": {
            "type": "string",
            "description": "The user's full name.",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The user's email address.",
            "example": "john.doe@example.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "guest",
              "subscriber",
              "admin"
            ],
            "description": "The user's role.",
            "example": "guest"
          },
          "verified": {
            "type": "boolean",
            "description": "The user's verification status.",
            "example": false
          }
        }
      },
      "SessionData": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "isLoggedIn": {
            "type": "boolean",
            "description": "Whether the user is logged in.",
            "example": true
          }
        }
      },
      "AdditionalInfo": {
        "type": "object",
        "properties": {
          "origin_country": {
            "type": "string",
            "description": "The country of origin.",
            "example": "USA"
          },
          "original_title": {
            "type": "string",
            "description": "The original title of the movie.",
            "example": "Inception"
          },
          "origin_country_certification": {
            "type": "string",
            "description": "The certification of the movie in the country of origin.",
            "example": "PG-13"
          },
          "production_companies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of production companies.",
            "example": [
              "Warner Bros.",
              "Legendary Pictures"
            ]
          },
          "director": {
            "type": "string",
            "description": "The director of the movie.",
            "example": "Christopher Nolan"
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/auth/signup": {
      "post": {
        "summary": "User Signup",
        "description": "Creates a new user and sends a verification email with an OTP.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "description": "The user information for signing up.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Signup successful. User created and OTP sent for email verification.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "sign up successful"
                    },
                    "user": {
                      "$ref": "#/components/schemas/ResponseUser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error in the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "example": "email"
                          },
                          "message": {
                            "type": "string",
                            "example": "Invalid email format. Please provide a valid email address"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error or failed to send verification email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to send email"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/verify": {
      "post": {
        "summary": "Verify User",
        "description": "Verifies a user using the provided email and OTP.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "description": "The email and OTP for user verification.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyUserRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User verified successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "user is verified successfully"
                    },
                    "user": {
                      "$ref": "#/components/schemas/ResponseUser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error in the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "example": "email"
                          },
                          "message": {
                            "type": "string",
                            "example": "Invalid email format. Please provide a valid email address"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "OTP expired or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "your otp is expired try getting new one"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User or OTP not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "user not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticates a user and starts a session.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "description": "The email and password for login.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "sessionID=abcde12345; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "login successful"
                    },
                    "user": {
                      "$ref": "#/components/schemas/ResponseUser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error in the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "example": "email"
                          },
                          "message": {
                            "type": "string",
                            "example": "Invalid email format. Please provide a valid email address"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, login failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to login"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "summary": "User logout",
        "description": "Logs out a user and destroys the session.",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logged out successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Could not log out, please try again"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "summary": "Get user profile",
        "description": "Retrieves the profile of the logged-in user.",
        "tags": [
          "User"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/ResponseUser"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, user not logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not logged in"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Check if the server is running",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}